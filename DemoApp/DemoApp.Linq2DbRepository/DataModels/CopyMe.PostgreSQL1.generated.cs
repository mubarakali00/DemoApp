//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : northwind
	/// Data Source    : localhost
	/// Server Version : 9.4.1
	/// </summary>
	public partial class northwindDB : LinqToDB.Data.DataConnection
	{
		public ITable<category> categories { get { return this.GetTable<category>(); } }
		public ITable<product>  products   { get { return this.GetTable<product>(); } }
		public ITable<supplier> suppliers  { get { return this.GetTable<supplier>(); } }

		public northwindDB()
		{
			InitDataContext();
		}

		public northwindDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table(Schema="public", Name="category")]
	public partial class category
	{
		[PrimaryKey, NotNull    ] public int    id          { get; set; } // integer
		[Column,     NotNull    ] public string name        { get; set; } // character varying(25)
		[Column,        Nullable] public string description { get; set; } // text
		[Column,        Nullable] public byte[] picture     { get; set; } // bytea

		#region Associations

		/// <summary>
		/// fk_prod_category_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="category_id", CanBeNull=true, IsBackReference=true)]
		public IEnumerable<product> fkprods { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="product")]
	public partial class product
	{
		[PrimaryKey, NotNull    ] public int    id                { get; set; } // integer
		[Column,     NotNull    ] public string name              { get; set; } // character varying(80)
		[Column,     NotNull    ] public int    supplier_id       { get; set; } // integer
		[Column,        Nullable] public int?   category_id       { get; set; } // integer
		[Column,        Nullable] public string quantity_per_unit { get; set; } // character varying(20)
		[Column,        Nullable] public float? unit_price        { get; set; } // real
		[Column,        Nullable] public short? units_in_stock    { get; set; } // smallint
		[Column,        Nullable] public short? units_on_order    { get; set; } // smallint
		[Column,        Nullable] public short? reorder_level     { get; set; } // smallint
		[Column,     NotNull    ] public int    discontinued      { get; set; } // integer

		#region Associations

		/// <summary>
		/// fk_prod_category
		/// </summary>
		[Association(ThisKey="category_id", OtherKey="id", CanBeNull=true, KeyName="fk_prod_category", BackReferenceName="fkprods")]
		public category fkprodcategory { get; set; }

		/// <summary>
		/// fk_prod_supplier
		/// </summary>
		[Association(ThisKey="supplier_id", OtherKey="id", CanBeNull=false, KeyName="fk_prod_supplier", BackReferenceName="fkprods")]
		public supplier fkprodsupplier { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="supplier")]
	public partial class supplier
	{
		[PrimaryKey, NotNull    ] public int    id          { get; set; } // integer
		[Column,     NotNull    ] public string name        { get; set; } // character varying(80)
		[Column,        Nullable] public string title       { get; set; } // character varying(30)
		[Column,        Nullable] public string address     { get; set; } // character varying(255)
		[Column,        Nullable] public string city        { get; set; } // character varying(50)
		[Column,        Nullable] public string region      { get; set; } // character varying(50)
		[Column,        Nullable] public string postal_code { get; set; } // character varying(10)
		[Column,        Nullable] public string country     { get; set; } // character varying(50)
		[Column,        Nullable] public string phone       { get; set; } // character varying(24)

		#region Associations

		/// <summary>
		/// fk_prod_supplier_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="supplier_id", CanBeNull=true, IsBackReference=true)]
		public IEnumerable<product> fkprods { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static category Find(this ITable<category> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static product Find(this ITable<product> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static supplier Find(this ITable<supplier> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}
	}
}
